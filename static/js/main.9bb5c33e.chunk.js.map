{"version":3,"sources":["logo.svg","services/FileUploadService.js","components/Slide.js","components/FileUpload.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","file","onUploadProgress","onDownloadProgress","data","FormData","append","config","method","url","headers","axios","Slide","React","memo","StackedCarouselSlideProps","dataIndex","isCenterSlide","swipeTo","slideIndex","coverImage","image_id","document_type","confidence_level","isNaN","Math","round","useState","imgSrc","setImgSrc","useEffect","get","responseType","then","response","reader","window","FileReader","readAsDataURL","onload","imageDataUrl","result","className","draggable","style","width","height","onClick","alt","src","backgroundColor","color","fontSize","fontWeight","UploadFiles","selectedFiles","setSelectedFiles","currentFile","setCurrentFile","progress","setProgress","messageUpload","setMessageUpload","status","setStatus","setData","Pagination","props","centerSlideDataIndex","updatePosition","console","log","display","justifyContent","gap","marginTop","marginBottom","map","_","index","borderRadius","background","border","cursor","ref","useRef","StackedCarousel","setCenterSlideDataIndex","onCenterSlideDataIndexChange","newIndex","length","position","carouselRef","render","slideComponent","slideWidth","carouselWidth","maxVisibleSlide","disableSwipe","customScales","transitionTime","onActiveSlideChange","Fab","size","current","goBack","margin","goNext","role","aria-valuenow","aria-valuemin","aria-valuemax","class","type","onChange","event","target","files","marginRight","name","disabled","UploadService","loaded","total","push","catch","App","base","exact","path","logo","FileUpload","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iIAAAA,EAAOC,QAAU,IAA0B,kC,yPCgC5B,EA7BA,SAACC,EAAMC,EAAkBC,GACtC,IAAMC,EAAO,IAAIC,IACjBD,EAAKE,OAAO,OAAQL,GACpB,IAAMM,EAAS,CACbC,OAAQ,OACRC,IAAK,8DACLC,QAAS,CACP,eAAgB,sBAChB,yBAA0B,OAE5BN,KAAOA,EACPF,mBACAC,sBAEF,OAAOQ,YAAMJ,I,kDCZFK,G,MAAQC,IAAMC,MAAK,SAAUC,GACtC,IACIX,EAKAW,EALAX,KACAY,EAIAD,EAJAC,UACAC,EAGAF,EAHAE,cACAC,EAEAH,EAFAG,QACAC,EACAJ,EADAI,WAGEC,EAAa,iEAAmEhB,EAAKY,GAAWK,SAChGC,EAAgBlB,EAAKY,GAAWM,cAChCC,EAAoBC,MAAMpB,EAAKY,GAAWO,kBAE5CnB,EAAKY,GAAWO,iBADfE,KAAKC,MAAyC,IAAnCtB,EAAKY,GAAWO,kBAA0B,IAAO,IAGjE,EAA4BI,mBAAS,IAAG,mBAAjCC,EAAM,KAAEC,EAAS,KAoBxB,OAlBAC,qBAAU,WACNnB,IAAMoB,IAAIX,EAAY,CAClBY,aAAc,OACdtB,QAAS,CACL,yBAA0B,SAG7BuB,MAAK,SAAUC,GAEZ,IAAIC,EAAS,IAAIC,OAAOC,WACxBF,EAAOG,cAAcJ,EAAS9B,MAC9B+B,EAAOI,OAAS,WACZ,IAAIC,EAAeL,EAAOM,OAC1BZ,EAAUW,SAGvB,IAGC,yBAAKE,UAAU,YAAYC,WAAW,EAAOC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACzE,yBAAKJ,UAAS,qBAAgBzB,EAAgB,MAAQ,OAClD,yBACIyB,UAAU,oBACVK,QAAS,WACA9B,GAAeC,EAAQC,OAIxC,yBAAKuB,UAAU,eACX,yBAAKA,UAAU,eACX,yBACIE,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCE,IAAI,uBACJN,UAAU,cACVO,IAAKrB,IAET,yBAAKgB,MAAO,CAAEM,gBAAiB,YAC3B,uBAAGN,MAAO,CAAEO,MAAO,QAASC,SAAU,OAAQC,WAAY,WAAa/B,GACvE,uBAAGsB,MAAO,CAAEO,MAAO,QAASC,SAAU,OAAQC,WAAY,SAAW9B,WCkK9E+B,EAjNK,WAChB,MAA0C3B,mBAAS,MAAK,mBAAjD4B,EAAa,KAAEC,EAAgB,KACtC,EAAsC7B,mBAAS,MAAK,mBAA7C8B,EAAW,KAAEC,EAAc,KAClC,EAAgC/B,mBAAS,GAAE,mBAApCgC,EAAQ,KAAEC,EAAW,KAC5B,EAA0CjC,mBAAS,IAAG,mBAA/CkC,EAAa,KAAEC,EAAgB,KACtC,EAA4BnC,mBAAS,IAAG,mBAAjCoC,EAAM,KAAEC,EAAS,KACxB,EAAwBrC,mBAAS,IAAG,mBAA7BvB,EAAI,KAAE6D,EAAO,KAMpB,SAASC,EAAWC,GAChB,IAAQC,EAAyCD,EAAzCC,qBAAsBC,EAAmBF,EAAnBE,eAE9B,OADAC,QAAQC,IAAI,2CAAkCH,GAE1C,yBACIxB,MAAO,CACH4B,QAAS,OACTC,eAAgB,SAChBC,IAAK,OACLC,UAAW,GACXC,aAAc,KAGjBxE,EAAKyE,KAAI,SAACC,EAAGC,GACV,IAAM9D,EAAgBkD,EAAMC,uBAAyBW,EACrD,OACI,yBACIhC,QAAS,WACLsB,EAAeU,IAEnBnC,MAAO,CACHE,OAAQ,GACRD,MAAO,GACPmC,aAAc,OACdC,WAAYhE,EAAgB,QAAU,OACtCiE,OAAQ,kBACRC,OAAQ,iBA9BpCrD,qBAAU,WACNkC,EAAU,OACX,IAqCH,IAAMoB,EAAMvE,IAAMwE,OAAOC,KACzB,EAAwDzE,IAAMc,SAAS,GAAE,mBAAlEyC,EAAoB,KAAEmB,EAAuB,KAC9CC,EAA+B,SAACC,GAClCF,EAAwBE,IA0D5B,OAJA3D,qBAAU,WACNgC,EAAiB,uBAClB,IAGC,6BAEwB,IAAhB1D,EAAKsF,QACL,6BACI,yBAAK9C,MAAO,CAAEC,MAAO,OAAQ8C,SAAU,aACnC,kBAAC,IAAmB,CAChBC,YAAaR,EACbS,OAAQ,SAAChD,EAAO+C,GACZ,OACI,kBAAC,IAAe,CACZR,IAAKQ,EACLE,eAAgBlF,EAChBmF,WAAY,IACZC,cAAenD,EACfC,OAAQ,IACR1C,KAAMA,EACN6F,gBAAiB,EACjBC,cAAY,EACZC,aAAc,CAAC,EAAG,IAAM,GAAK,KAC7BC,eAAgB,IAChBC,oBAAqBb,QAMzC,yBAAK5C,MAAO,CAAE4B,QAAS,gBACnB,kBAAC8B,EAAA,EAAG,CACA5D,UAAU,mBACV6D,KAAK,QACLxD,QAAS,wBAAiB,QAAjB,EAAMqC,EAAIoB,eAAO,aAAX,EAAaC,UAC5B7D,MAAO,CAAE8D,OAAQ,SAEjB,kBAAC,IAAqB,CAAC9D,MAAO,CAAEQ,SAAU,OAE9C,kBAACc,EAAU,CACPG,eA5FD,SAACU,GAAW,IAAD,EAC9BT,QAAQC,IAAI,+BAAsBQ,GAClCT,QAAQC,IAAI,0CAAiCH,GAC7CE,QAAQC,IAAI,wBAAeQ,EAAQX,GAEhC,OAAHgB,QAAG,IAAHA,GAAY,QAAT,EAAHA,EAAKoB,eAAO,OAAZ,EAActF,QAAQ6D,EAAQX,IAwFVA,qBAAsBA,IAE1B,kBAACkC,EAAA,EAAG,CACA5D,UAAU,oBACV6D,KAAK,QACLxD,QAAS,wBAAiB,QAAjB,EAAMqC,EAAIoB,eAAO,aAAX,EAAaG,UAC5B/D,MAAO,CAAE8D,OAAQ,SAEjB,kBAAC,IAAsB,CAAC9D,MAAO,CAAEQ,SAAU,SAM1DK,GACG,yBAAKf,UAAU,YACX,yBACIA,UAAU,sDACVkE,KAAK,cACLC,gBAAelD,EACfmD,gBAAc,IACdC,gBAAc,MACdnE,MAAO,CAAEC,MAAOc,EAAW,MAE1BA,EAAS,MAKtB,2BAAOjB,UAAU,mBAEb,2BAAOsE,MAAM,sBACT,2BAAOC,KAAK,OAAOC,SApHhB,SAACC,GACkB,IAA9BA,EAAMC,OAAOC,MAAM3B,OACnBlC,EAAiB2D,EAAMC,OAAOC,OAE9BvD,EAAiB,gCAgHkC,WAKnD,2BAAOlB,MAAO,CACVQ,SAAU,OACVkE,YAAa,SAIT/D,EACIA,EAAc,GAAGgE,KACjB1D,GAIZ,4BACInB,UAAU,kBACV8E,UAAWjE,EACXR,QAhIG,WACX,IAAIU,EAAcF,EAAc,GAEhCK,EAAY,GACZF,EAAeD,GACfO,EAAU,iBACVC,EAAQ,IAERwD,EAAqBhE,GAAa,SAAC0D,GAC/BvD,EAAYnC,KAAKC,MAAO,GAAKyF,EAAMO,OAAUP,EAAMQ,WACpD,SAACR,GACAvD,EAAYnC,KAAKC,MAAO,IAAMyF,EAAMO,OAAUP,EAAMQ,WAEnD1F,MAAK,SAACC,GAEH,IADA,IAAIO,EAAM,YAAOP,EAAS9B,MACnBqC,EAAOiD,OAAS,GACnBjD,EAAOmF,KAAK,CACRvG,SAAU,YACVC,cAAe,sBACfC,iBAAkBW,EAAS9B,KAAKsF,OAAS,UAGjDzB,EAAQxB,GACRuB,EAAU,eAEb6D,OAAM,WACHjE,EAAY,GACZI,EAAU,iCAIlBR,EAAiB,QAkGZ,UAGD,6BACI,6BAAK,WAASO,MC1Kf+D,MAvCf,WASE,OACE,yBAAKpF,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAU,CAACqF,KAAK,iBAMf,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACC,OAAK,EAACC,KAAK,KAChB,yBAAKhF,IAAKiF,IAAMxF,UAAU,WAAWM,IAAI,SAEzC,yBAAKN,UAAU,YAAYE,MAAO,CAAEC,MAAO,SACzC,yBAAKH,UAAU,QACb,4BAAI,YAEN,kBAACyF,EAAU,QAGf,kBAAC,IAAK,CAACF,KAAK,UACV,2BAAG,yBCzBGG,QACW,cAA7BhG,OAAOiG,SAASC,UAEe,UAA7BlG,OAAOiG,SAASC,UAEhBlG,OAAOiG,SAASC,SAASC,MACvB,2DCZNC,IAAS3C,OAAO,kBAAC,EAAG,MAAK4C,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5G,MAAK,SAAA6G,GACjCA,EAAaC,kB","file":"static/js/main.9bb5c33e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\nimport FormData from \"form-data\"\n\nconst upload = (file, onUploadProgress, onDownloadProgress) => {\n  const data = new FormData();\n  data.append('file', file)\n  const config = {\n    method: 'post',\n    url: \"https://early-icons-roll-35-230-119-109.loca.lt/api/predict\",\n    headers: { \n      \"Content-Type\": \"multipart/form-data\",\n      \"Bypass-Tunnel-Reminder\": \"abc\"\n    },\n    data : data,\n    onUploadProgress,\n    onDownloadProgress\n  };\n  return axios(config)\n  // let formData = new FormData();\n\n  // formData.append(\"file\", file);\n\n  // return http.post(\"/api/predict\", formData, {\n  //   headers: {\n  //     \"Content-Type\": \"multipart/form-data\",\n  //   },\n  //   onUploadProgress,\n  // });\n\n\n};\n\nexport default {\n  upload,\n};","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./Slide.css\";\r\nimport axios from \"axios\";\r\n\r\nexport const Slide = React.memo(function (StackedCarouselSlideProps) {\r\n    const {\r\n        data,\r\n        dataIndex,\r\n        isCenterSlide,\r\n        swipeTo,\r\n        slideIndex\r\n    } = StackedCarouselSlideProps;\r\n\r\n    const coverImage = 'https://early-icons-roll-35-230-119-109.loca.lt/view_image?id=' + data[dataIndex].image_id;\r\n    const document_type = data[dataIndex].document_type;\r\n    const confidence_level = !isNaN(data[dataIndex].confidence_level) ?\r\n        (Math.round(data[dataIndex].confidence_level * 100) / 100) + \"%\" :\r\n        data[dataIndex].confidence_level;\r\n\r\n    const [imgSrc, setImgSrc] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(coverImage, {\r\n            responseType: \"blob\",\r\n            headers: {\r\n                'Bypass-Tunnel-Reminder': 'abc'\r\n            }\r\n        })\r\n            .then(function (response) {\r\n\r\n                var reader = new window.FileReader();\r\n                reader.readAsDataURL(response.data);\r\n                reader.onload = function () {\r\n                    var imageDataUrl = reader.result;\r\n                    setImgSrc(imageDataUrl)\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card-card\" draggable={false} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <div className={`cover fill ${isCenterSlide ? \"off\" : \"on\"}`}>\r\n                <div\r\n                    className=\"card-overlay fill\"\r\n                    onClick={() => {\r\n                        if (!isCenterSlide) swipeTo(slideIndex);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"detail fill\">\r\n                <div className=\"discription\">\r\n                    <img\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                        alt=\"Loading, please wait\"\r\n                        className=\"cover-image\"\r\n                        src={imgSrc}\r\n                    />\r\n                    <div style={{ backgroundColor: \"#1B1E23\" }}>\r\n                        <p style={{ color: \"white\", fontSize: \"12px\", fontWeight: \"bolder\" }}>{document_type}</p>\r\n                        <p style={{ color: \"white\", fontSize: \"12px\", fontWeight: \"bold\" }}>{confidence_level}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useState, useEffect } from \"react\";\nimport UploadService from \"../services/FileUploadService\";\nimport {\n    StackedCarousel,\n    ResponsiveContainer\n} from \"react-stacked-center-carousel\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport \"./Slide.css\";\nimport { Slide } from \"./Slide\";\n\n\nconst UploadFiles = () => {\n    const [selectedFiles, setSelectedFiles] = useState(null);\n    const [currentFile, setCurrentFile] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [messageUpload, setMessageUpload] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        setStatus(\"-\");\n    }, []);\n\n    function Pagination(props) {\n        const { centerSlideDataIndex, updatePosition } = props;\n        console.log(\"🚀 ~ centerSlideDataIndex--000\", centerSlideDataIndex);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    gap: \"20px\",\n                    marginTop: 20,\n                    marginBottom: 20\n                }}\n            >\n                {data.map((_, index) => {\n                    const isCenterSlide = props.centerSlideDataIndex === index;\n                    return (\n                        <div\n                            onClick={() => {\n                                updatePosition(index);\n                            }}\n                            style={{\n                                height: 15,\n                                width: 15,\n                                borderRadius: \"100%\",\n                                background: isCenterSlide ? \"white\" : \"none\",\n                                border: \"1px solid white\",\n                                cursor: \"pointer\"\n                            }}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n\n    const ref = React.useRef(StackedCarousel);\n    const [centerSlideDataIndex, setCenterSlideDataIndex] = React.useState(0);\n    const onCenterSlideDataIndexChange = (newIndex) => {\n        setCenterSlideDataIndex(newIndex);\n    };\n\n    const updatePosition = (index) => {\n        console.log(\"🚀 ~ ition ~ index\", index);\n        console.log(\"🚀 ~centerSlideDataIndex--111\", centerSlideDataIndex);\n        console.log(\"🚀 subtract\", index - centerSlideDataIndex);\n        // eslint-disable-next-line no-unused-expressions\n        ref?.current?.swipeTo(index - centerSlideDataIndex);\n    };\n\n\n    const selectFile = (event) => {\n        if (event.target.files.length === 1) {\n            setSelectedFiles(event.target.files);\n        } else {\n            setMessageUpload(\"Please choose only 1 file\")\n        }\n    };\n\n    const upload = () => {\n        let currentFile = selectedFiles[0];\n\n        setProgress(0);\n        setCurrentFile(currentFile);\n        setStatus(\"Predicting...\")\n        setData([])\n\n        UploadService.upload(currentFile, (event) => {\n            setProgress(Math.round((50 * event.loaded) / event.total));\n        }, (event) => {\n            setProgress(Math.round((100 * event.loaded) / event.total));\n        })\n            .then((response) => {\n                let result = [...response.data]\n                while (result.length < 3) {\n                    result.push({\n                        image_id: \"blank.jpg\",\n                        document_type: \"This file only have\",\n                        confidence_level: response.data.length + \" page\"\n                    })\n                }\n                setData(result)\n                setStatus(\"Success!\");\n            })\n            .catch(() => {\n                setProgress(0);\n                setStatus(\"Could not upload the file!\");\n\n            });\n\n        setSelectedFiles(null);\n    };\n\n    useEffect(() => {\n        setMessageUpload(\"No file selected.\")\n    }, []);\n\n    return (\n        <div>\n            {\n                data.length !== 0 &&\n                <div>\n                    <div style={{ width: \"100%\", position: \"relative\" }}>\n                        <ResponsiveContainer\n                            carouselRef={ref}\n                            render={(width, carouselRef) => {\n                                return (\n                                    <StackedCarousel\n                                        ref={carouselRef}\n                                        slideComponent={Slide}\n                                        slideWidth={300}\n                                        carouselWidth={width}\n                                        height={500}\n                                        data={data}\n                                        maxVisibleSlide={5}\n                                        disableSwipe\n                                        customScales={[1, 0.85, 0.7, 0.55]}\n                                        transitionTime={450}\n                                        onActiveSlideChange={onCenterSlideDataIndexChange}\n                                    />\n                                );\n                            }}\n                        />\n                    </div>\n                    <div style={{ display: \"inline-flex\" }}>\n                        <Fab\n                            className=\"card-button left\"\n                            size=\"small\"\n                            onClick={() => ref.current?.goBack()}\n                            style={{ margin: \"10px\" }}\n                        >\n                            <KeyboardArrowLeftIcon style={{ fontSize: 30 }} />\n                        </Fab>\n                        <Pagination\n                            updatePosition={updatePosition}\n                            centerSlideDataIndex={centerSlideDataIndex}\n                        />\n                        <Fab\n                            className=\"card-button right\"\n                            size=\"small\"\n                            onClick={() => ref.current?.goNext()}\n                            style={{ margin: \"10px\" }}\n                        >\n                            <KeyboardArrowRightIcon style={{ fontSize: 30 }} />\n                        </Fab>\n                    </div>\n                </div>\n            }\n\n            {currentFile && (\n                <div className=\"progress\">\n                    <div\n                        className=\"progress-bar progress-bar-info progress-bar-striped\"\n                        role=\"progressbar\"\n                        aria-valuenow={progress}\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                        style={{ width: progress + \"%\" }}\n                    >\n                        {progress}%\n                    </div>\n                </div>\n            )}\n\n            <label className=\"btn btn-default\">\n                {/* <input type=\"file\" onChange={selectFile} /> */}\n                <label class=\"custom-file-upload\">\n                    <input type=\"file\" onChange={selectFile} />\n                    Browse\n                </label>\n            </label>\n\n            <label style={{\n                fontSize: '20px',\n                marginRight: '10px'\n            }}>\n                {/* {selectedFiles.get(0).name} */}\n                {\n                    selectedFiles ?\n                        selectedFiles[0].name :\n                        messageUpload\n                }\n            </label>\n\n            <button\n                className=\"btn btn-success\"\n                disabled={!selectedFiles}\n                onClick={upload}\n            >\n                Upload\n            </button>\n            <div>\n                <div>Status: {status}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default UploadFiles;","import React, { useState, useEffect } from 'react';\nimport { HashRouter , Link, Switch, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FileUpload from \"./components/FileUpload\";\n\nfunction App() {\n  // const [currentTime, setCurrentTime] = useState(0);\n\n  // useEffect(() => {\n  //   fetch('/api/time').then(res => res.json()).then(data => {\n  //     setCurrentTime(data.time);\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HashRouter base=\"/doc-class-fe\">\n          {/* <div>\n            <Link className=\"App-link\" to=\"/\">{process.env.REACT_APP_TITLE}</Link>\n            &nbsp;|&nbsp;\n            <Link className=\"App-link\" to=\"/page2\">Page2</Link>\n          </div> */}\n          <Switch>\n            <Route exact path=\"/\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              {/* <p>The current time is {currentTime}.</p> */}\n              <div className=\"container\" style={{ width: \"100%\" }}>\n                <div className=\"my-3\">\n                  <h3>Predict</h3>\n                </div>\n                <FileUpload />\n              </div>\n            </Route>\n            <Route path=\"/page2\">\n              <p>This is page 3!</p>\n            </Route>\n          </Switch>\n        </HashRouter >\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}